import React, {useRef, useEffect, useState} from 'react';
import { readFileSync } from "fs";
import './QueueComp.css';

const URL = 'wss://159.203.39.197:3000';

const QueueComp = () => {

         const [onetime , setOnetime] = useState('yes');
         const [fromuser, setFromuser ] = useState([]);
      const [adminchat, setAdminchat ] = useState([]);
     const  textchat = useRef(null);      
      const userchat = useRef(null);


  const [ws, setWs] = useState(new WebSocket(URL));
const toggleAdmin = [];
const toggleUser = [];


              if(onetime  === "yes"){
                   ws.onopen = () => {
                   const message = { user: "admin", message: ""};
                ws.send(JSON.stringify(message));
              
            }
               let newonetime = onetime;
               newonetime = "no";
               setOnetime(newonetime);
}

async function onmessagehelper(message){
              let emailaddress = message.email;


                if(toggleAdmin.length != 0){
             let datau = { "fromuserc": fromuser, "adminchatc": adminchat };
const response = await fetch("https://159.203.39.197:3000/memberarea", {
               method: "POST",
               headers: { 'Content-Type': 'application/json' },
               body: JSON.stringify(datau)
});

if(response.ok){

                      let empfromuser = fromuser;
                      empfromuser.length = 0;
                      setFromuser(empfromuser);
                       let empadminchat = adminchat;
                         empadminchat.length = 0;
                      setAdminchat(empadminchat);
                    toggleAdmin.length = 0;
                              
}}
return "kampret";

}

            ws.onmessage = (e) => {
  
            console.log(JSON.parse(e.data));  
          const message = JSON.parse(e.data);
		onmessagehelper(message).then((resp) => {             
              if(message.message){
              let newfromuser = fromuser;
               newfromuser.push(JSON.parse(e.data));
                setFromuser(newfromuser);
                 
                    console.log(newfromuser);
                  userchat.current.value = message.message;
               if(adminchat.length != 0 && fromuser.length != 0){
                   toggleUser.push(1);
}
}});
}



              



           window.addEventListener('beforeunload', function(k){
                  k.preventDefault();
                   const message = { status: "admindown", message: ''};
                ws.send(JSON.stringify(message));
              ws.onclose = () => {
                console.log('WebSocket Disconnected');
              }
            });

async function helperhandlesubmit(){
 
 if(toggleUser.length != 0){

  let datau = { "fromuserc": fromuser, "adminchatc": adminchat };
const responses = await fetch("https://159.203.39.197:3000/memberarea", {
               method: "POST",
               headers: { 'Content-Type': 'application/json' },
               body: JSON.stringify(datau)
});
if(responses.ok){

                      let empfromuser = fromuser;
                      empfromuser.length = 0;
                      setFromuser(empfromuser);
                       let empadminchat = adminchat;
                         empadminchat.length = 0;
                      setAdminchat(empadminchat);

                    toggleUser.length = 0;  

}}
return "pret";
}


function handleSubmit(event){
        event.preventDefault();
 
          
         helperhandlesubmit().then((resp) => {
          if(textchat.current.value !== ''){
            let  chatbaru = adminchat;
                 let tmpchat = textchat.current.value;
                const message = { user: "admin", message: tmpchat};
        chatbaru.push(message);
          setAdminchat(chatbaru);
                ws.send(JSON.stringify(message));
   
            }

textchat.current.value = '';

 if(adminchat.length != 0 && fromuser.length != 0){
                   toggleAdmin.push(1);
} 

console.log(adminchat);      
});
}


return(

<>
<div className="tampil">
<div className="blkareau">
  <button className="btnareau">{fromuser[0].email}</button>
  <textarea type="textarea" readOnly className="txtareau" rows="10" cols="50" ref={userchat}>
    </textarea>
</div>
<div className="blkareaa">
  <form action="" onSubmit={(e) => handleSubmit(e)}>
<button className="btnareaa">Admin</button>
  <textarea type="textarea" className="txtareaa" rows="10" cols="50"  
   ref={textchat} >
    </textarea>
   <input type="submit" className="btnsubmit" value="send"/>
   </form> 
</div> 
</div>
</>
   );
}


export default QueueComp;
